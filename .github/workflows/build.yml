name: build

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build'
        required: false
        default: 'main'
        type: string

env:
  GHCR_REPO: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-22.04
          - platform: linux/arm64
            runner: ubuntu-22.04-arm
    runs-on: ${{ matrix.runner || 'ubuntu-22.04' }}
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
          echo "VERSION=${{ github.event.inputs.version || (startsWith(github.ref, 'refs/tags/v') && github.ref_name) || 'main' }}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GHCR_REPO }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push runtime by digest
        id: build-runtime
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          target: runtime
          outputs: type=image,name=${{ env.GHCR_REPO }},push-by-digest=true,name-canonical=true,push=true
          build-args: |
            VERSION=${{ env.VERSION }}
      - name: Build and push dev by digest
        id: build-dev
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          target: dev
          outputs: type=image,name=${{ env.GHCR_REPO }}-dev,push-by-digest=true,name-canonical=true,push=true
          build-args: |
            VERSION=${{ env.VERSION }}
      - name: Export digests
        run: |
          mkdir -p ${{ runner.temp }}/digests/runtime
          mkdir -p ${{ runner.temp }}/digests/dev
          digest_runtime="${{ steps.build-runtime.outputs.digest }}"
          digest_dev="${{ steps.build-dev.outputs.digest }}"
          touch "${{ runner.temp }}/digests/runtime/${digest_runtime#sha256:}"
          touch "${{ runner.temp }}/digests/dev/${digest_dev#sha256:}"

      - name: Upload runtime digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-runtime-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/runtime/*
          if-no-files-found: error
          retention-days: 1

      - name: Upload dev digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-dev-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/dev/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download runtime digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests/runtime
          pattern: digests-runtime-*
          merge-multiple: true

      - name: Download dev digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests/dev
          pattern: digests-dev-*
          merge-multiple: true

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GHCR_REPO }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag

      - name: Create runtime manifest list and push
        working-directory: ${{ runner.temp }}/digests/runtime
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.GHCR_REPO }}@sha256:%s ' *)

      - name: Create dev manifest list and push
        working-directory: ${{ runner.temp }}/digests/dev
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + . + "-dev") | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.GHCR_REPO }}@sha256:%s ' *)

      - name: Inspect images
        run: |
          docker buildx imagetools inspect ${{ env.GHCR_REPO }}:${{ steps.meta.outputs.version }}
          docker buildx imagetools inspect ${{ env.GHCR_REPO }}:${{ steps.meta.outputs.version }}-dev
